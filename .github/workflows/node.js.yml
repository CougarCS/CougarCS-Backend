name: Install, Test, Build

on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - id: yarn-cache
      name: Get Yarn cache path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@master
      with:
        node-version: 12.x

    - name: Load cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Run ESLint
      run: yarn eslint-check

  test-build-release:
    runs-on: ubuntu-latest

    steps:
    - id: yarn-cache
      name: Get Yarn cache path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@master
      with:
        node-version: 12.x

    - name: Load cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --frozen-lockfile  
      
    - name: Test
      run: yarn test:coverage
      env:
        NEW_RELIC_ENABLED: false 

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: ./coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      run: yarn build

    - name: Create Sentry release
      if: ${{ github.repository_owner == 'CougarCS' && !contains(toJSON(github.event), 'pull_request')}}
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production